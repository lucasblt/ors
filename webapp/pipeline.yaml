trigger:
- master

resources:
- repo: self

variables:
  vmImageName: 'ubuntu-latest'
  ImageName: 'lucasblt/ors:$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@1
      displayName: 'Build the Docker image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Build an image'
        dockerFile: 'webapp/app/Dockerfile'
        imageName: '$(ImageName)'
        includeLatestTag: true
        useDefaultContext: false
        buildContext: '.'
    - task: Docker@1
      displayName: 'Push the Docker image to Dockerhub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Push an image'
        imageName: '$(ImageName)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) 
    - upload: webapp/manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@1
            displayName: 'Setting Unix Line-endings'
            inputs:
              azureSubscription: 'service-connection'
              scriptLocation: inlineScript
              inlineScript: |
                  az aks get-credentials -n ors-cluster-aks -g ors-cluster-rg
                  kubectl apply -f $(Pipeline.Workspace)/webapp/manifests/deployment.yaml